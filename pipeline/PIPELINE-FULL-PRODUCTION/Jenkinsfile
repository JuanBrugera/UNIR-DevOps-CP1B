#!groovy

def activateEnv = "source jenkins-venv/bin/activate"

pipeline {
    agent any
    options {
        skipDefaultCheckout()
    }
    stages {
        stage('Initial Clean'){
            steps {
                deleteDir()
                sh 'printenv'
            }
        }
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Setup'){
            steps{
                // Setup Virtualenv for testing
                sh """
                python3.8 -m venv jenkins-venv
                $activateEnv
                pip install -U pip
                pip install -r requirements.txt
                """
            }
        }
        stage('Build') {
            steps {
                // Build release
                sh "sam build"
                // Package release and persist in s3 bucket
                // sh "sam package --template-file template.yaml --output-template-file packaged.yaml --s3-bucket ${env.COUNTRY}-${env.TEAM}-${env.ENVIRONMENT}-${env.SERVICE}-${env.RAND_ID}-artifacts"
                // https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-package.html
                // sam deploy now implicitly performs the functionality of sam package. You can use the sam deploy command directly to package and deploy your application.
            }
        }
        stage('Deploy'){
            steps{
                script {
                    try {
                        sh "sam deploy --config-env ${env.ENVIRONMENT}"
                    } catch (exc) {
                        echo "Deployment has failed. Let's Rollback"
                        // rollback code here
                        throw (exc)
                    }
                }
            }
        }
        stage('Integration Test'){
            steps{
                // Unittest or pytest
                // Unitary testing -> unittest or pytest against the lambda functions.
                echo 'Testing all methods works fine'
                sh "$activateEnv && pytest mytest/TestIntegration.py"
            }
        }
        stage('Final Clean'){
            steps {
                echo 'Cleaning after deployment...'
                deleteDir()
            }
        }
    }
}